/*
 * Wazuh Vulnerability scanner
 * Copyright (C) 2015, Wazuh Inc.
 * March 25, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "vulnerabilityScanner.hpp"
#include "cjsonSmartDeleter.hpp"
#include "vulnerabilityScannerFacade.hpp"
#include "vulnerability_scanner.h"
#include <functional>
#include <string>

void VulnerabilityScanner::start(const std::function<void(const modules_log_level_t, const std::string&)>& logFunction,
                                 const nlohmann::json& configuration)
{
    VulnerabilityScannerFacade::instance().start(logFunction, configuration);
}

void VulnerabilityScanner::stop()
{
    VulnerabilityScannerFacade::instance().stop();
}

#ifdef __cplusplus
extern "C"
{
#endif
    void vulnerability_scanner_start(log_callback_t callbackLog, const cJSON* configuration)
    {
        const std::unique_ptr<char, CJsonSmartFree> spJsonBytes {cJSON_Print(configuration)};

        VulnerabilityScanner::instance().start(
            [callbackLog](const modules_log_level_t logLevel, const std::string& logMessage)
            { callbackLog(logLevel, logMessage.c_str()); },
            nlohmann::json::parse(spJsonBytes.get()));
    }

    void vulnerability_scanner_stop()
    {
        VulnerabilityScanner::instance().stop();
    }

    bool vulnerability_scanner_policy_change_event(const char* data)
    {
        return true;
    }
#ifdef __cplusplus
}
#endif

