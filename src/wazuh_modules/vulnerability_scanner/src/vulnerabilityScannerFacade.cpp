/*
 * Wazuh Vulnerability scanner
 * Copyright (C) 2015, Wazuh Inc.
 * March 25, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "vulnerabilityScannerFacade.hpp"

void VulnerabilityScannerFacade::start(
    const std::function<void(const modules_log_level_t, const std::string&)>& logFunction,
    const nlohmann::json& configuration)
{
    // Subscription to syscollector events.
    m_syscollectorSubscription = std::make_unique<RouterSubscriber>("syscollector", "vulnerability_scanner");
    m_syscollectorSubscription->subscribe(
        [logFunction](const std::vector<char>& message)
        {
            logFunction(LOG_INFO, message.data());
            std::make_unique<ScanOrchestrator>(logFunction)->run(message);
        });

    // Vulnerability content updater initialization.
    m_contentRegistration =
        std::make_unique<ContentRegister>("content_vulnerability_scanner", configuration.at("contentUpdater"));

    // Policy manager initialization.
    m_policyManager = std::make_unique<PolicyManager>(configuration);

    // Database feed manager initialization.
    m_databaseFeedManager = std::make_unique<DatabaseFeedManager>(configuration.at("databaseFeedManager"));
}

void VulnerabilityScannerFacade::stop()
{
    m_databaseFeedManager.reset();
    m_contentRegistration.reset();
    m_syscollectorSubscription.reset();
}
